{"version":3,"sources":["context/functions/getPostById.ts","context/functions/getPosts.ts","context/functions/getUser.ts","context/functions/initBlog.ts","functions/getAvatarUrl.ts","context/Blog.tsx","functions/getRandomName.ts","components/Button.tsx","components/EditProfile.tsx","components/InterestingSkeleton.tsx","components/PostForm.tsx","components/EditPost.tsx","functions/displayKey.ts","components/PostCard.tsx","components/SponsoredSkeleton.tsx","pages/dashboard.tsx","router.tsx","App.tsx","index.tsx"],"names":["getPostById","postId","program","a","account","postState","fetch","PublicKey","post","userId","user","toString","SystemProgram","programId","id","title","content","prePostId","prePostKey","console","log","message","getPosts","args","sub","observer","Observable","subscriber","fromPostId","nextPostId","next","complete","start","unsubscribe","getUser","walletKey","userAccount","getUserKey","userState","publicKey","_user","name","avatar","initBlog","blogKey","blogState","blog","blogAccount","Keypair","generate","genesisPostAccount","rpc","accounts","authority","systemProgram","signers","getAvatarUrl","key","md5","PROGRAM_KEY","idl","metadata","address","BLOG_KEY","fromSeed","TextEncoder","encode","slice","getProgram","provider","Program","BlogContext","createContext","undefined","posts","createPost","updatePost","deletePost","deleteLatestPost","updateUser","fetchUser","useBlog","context","useContext","Error","BlogProvider","children","useState","setUser","setPosts","setProvider","wallet","useAnchorWallet","connection","useConnection","signupUser","useCallback","data","tx","nameGenerator","postAccount","oldPost","updatedPost","map","D","nextPostAccount","useEffect","Provider","POST_EVENT_LISTENER","currentPostKey","subscribe","addEventListener","event","label","nextPost","filter","removeEventListener","catch","e","value","Button","loading","className","disabled","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","EditProfile","oldName","referenceElementRef","useRef","popperElementRef","usePopper","current","styles","attributes","setLoading","setName","onUpdateProfile","open","ref","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","style","omit","popper","right","onChange","target","type","placeholder","onClick","InterestingSkeleton","PostForm","props","onSubmit","postTitle","postContent","setPostContent","setPostTitle","formHeader","buttonText","rows","EditPost","setOpen","Root","as","Fragment","onClose","Child","Overlay","displayKey","pubKey","length","substring","PostCard","date","currentUser","loadingDelete","setLoadingDelete","openEdit","setOpenEdit","src","alt","o","SponsoredSkeleton","Dashboard","connecting","setConnecting","useWallet","connected","select","onConnect","WalletName","Phantom","onCreatePost","leftIcon","i","Router","path","wallets","getPhantomWallet","endPoint","clusterApiUrl","App","ConnectionProvider","endpoint","WalletProvider","autoConnect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c45b893.chunk.js","sourcesContent":["import { Program } from \"@project-serum/anchor\";\r\nimport { PublicKey, SystemProgram } from \"@solana/web3.js\";\r\n\r\nexport async function getPostById(postId: string, program: Program) {\r\n  try {\r\n    const post: any = await program.account.postState.fetch(\r\n      new PublicKey(postId)\r\n    );\r\n\r\n    const userId = post.user.toString();\r\n    if (userId === SystemProgram.programId.toString()) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      id: postId,\r\n      title: post.title,\r\n      content: post.content,\r\n      userId,\r\n      prePostId: post.prePostKey.toString(),\r\n    };\r\n  } catch (e: any) {\r\n    console.log(e.message);\r\n  }\r\n}\r\n","import { Program } from \"@project-serum/anchor\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { Post } from \"src/context/Blog\";\r\nimport { getPostById } from \"src/context/functions/getPostById\";\r\n\r\nexport function getPosts(args: {\r\n  program: Program;\r\n  fromPostId: string;\r\n  toPostId?: string;\r\n}) {\r\n  let sub: Subscriber<Post> | undefined;\r\n\r\n  const cancel = () => sub?.unsubscribe();\r\n  const observer = new Observable<Post>((subscriber) => {\r\n    sub = subscriber;\r\n\r\n    async function start() {\r\n      const { program, fromPostId } = args;\r\n      let nextPostId: string | null = fromPostId;\r\n\r\n      while (!!nextPostId) {\r\n        const post: Post | undefined = await getPostById(nextPostId, program);\r\n        if (!post) {\r\n          break;\r\n        }\r\n\r\n        subscriber.next(post);\r\n        nextPostId = post.prePostId;\r\n      }\r\n\r\n      subscriber.complete();\r\n    }\r\n\r\n    start();\r\n  });\r\n\r\n  return [observer, cancel] as const;\r\n}\r\n","import { Program } from \"@project-serum/anchor\";\r\nimport { PublicKey } from \"@solana/web3.js\";\r\nimport { getUserKey } from \"src/context/Blog\";\r\n\r\nexport async function getUser(program: Program, walletKey: PublicKey) {\r\n  const userAccount = getUserKey(walletKey);\r\n\r\n  try {\r\n    const _user: any = await program.account.userState.fetch(\r\n      userAccount.publicKey\r\n    );\r\n\r\n    const user = {\r\n      id: userAccount.publicKey.toString(),\r\n      name: _user.name,\r\n      avatar: _user.avatar,\r\n    };\r\n\r\n    return user;\r\n  } catch {}\r\n}\r\n","import { Program } from \"@project-serum/anchor\";\r\nimport { Keypair, PublicKey, SystemProgram } from \"@solana/web3.js\";\r\n\r\nexport async function initBlog(\r\n  program: Program,\r\n  blogKey: PublicKey,\r\n  walletKey: PublicKey\r\n) {\r\n  try {\r\n    const blog: any = await program.account.blogState.fetch(blogKey);\r\n    return blog;\r\n  } catch {\r\n    const blogAccount = Keypair.generate();\r\n    const genesisPostAccount = Keypair.generate();\r\n\r\n    await program.rpc.initBlog({\r\n      accounts: {\r\n        authority: walletKey,\r\n        systemProgram: SystemProgram.programId,\r\n        blogAccount: blogAccount.publicKey,\r\n        genesisPostAccount: genesisPostAccount.publicKey,\r\n      },\r\n      signers: [blogAccount, genesisPostAccount],\r\n    });\r\n\r\n    const blog = await program.account.blogState.fetch(blogAccount.publicKey);\r\n\r\n    console.log(\"Blog pubkey: \", blogAccount.publicKey.toString());\r\n    return blog;\r\n  }\r\n}\r\n","import md5 from \"md5\";\r\n\r\nexport const getAvatarUrl = (key: string) => {\r\n  return `https://gravatar.com/avatar/${md5(key)}?s=400&d=robohash&r=x`;\r\n};\r\n","import { Idl, Program, Provider } from \"@project-serum/anchor\";\r\nimport { useAnchorWallet, useConnection } from \"@solana/wallet-adapter-react\";\r\nimport { Keypair, PublicKey, SystemProgram } from \"@solana/web3.js\";\r\nimport {\r\n  createContext,\r\n  FC,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { getPostById } from \"src/context/functions/getPostById\";\r\nimport { getPosts } from \"src/context/functions/getPosts\";\r\nimport { getUser } from \"src/context/functions/getUser\";\r\nimport { initBlog } from \"src/context/functions/initBlog\";\r\nimport { getAvatarUrl } from \"src/functions/getAvatarUrl\";\r\nimport { getRandomName } from \"src/functions/getRandomName\";\r\nimport idl from \"src/idl.json\";\r\n\r\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\r\nconst BLOG_KEY = new PublicKey(\"Gx7dKodSkhsbEvrXtVVECdC6a4sPb22iB3pCSmcVqBBp\");\r\n\r\n// create unique user key\r\nexport const getUserKey = (walletKey: PublicKey) => {\r\n  const userAccount = Keypair.fromSeed(\r\n    new TextEncoder().encode(\r\n      `${PROGRAM_KEY.toString().slice(0, 15)}__${walletKey\r\n        .toString()\r\n        .slice(0, 15)}`\r\n    )\r\n  );\r\n\r\n  return userAccount;\r\n};\r\n\r\nfunction getProgram(provider: Provider) {\r\n  return new Program(idl as Idl, PROGRAM_KEY, provider);\r\n}\r\n\r\ninterface PostData {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nexport interface Post extends PostData {\r\n  id: string;\r\n  userId: string;\r\n  prePostId: string | null;\r\n}\r\n\r\ninterface UserData {\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\ninterface User extends UserData {\r\n  id: string;\r\n}\r\n\r\ninterface IBlogContext {\r\n  user: User | undefined;\r\n  posts: Post[];\r\n  createPost: (data: PostData) => Promise<string | undefined>;\r\n  updatePost: (oldPost: Post, data: PostData) => Promise<string | undefined>;\r\n  deletePost: (\r\n    postId: string,\r\n    nextPostId: string\r\n  ) => Promise<string | undefined>;\r\n  deleteLatestPost: (postId: string) => Promise<string | undefined>;\r\n  updateUser: (name: string) => Promise<string | undefined>;\r\n  fetchUser: () => Promise<void>;\r\n}\r\n\r\nconst BlogContext = createContext<IBlogContext>({\r\n  user: undefined,\r\n  posts: [],\r\n  createPost: async () => undefined,\r\n  updatePost: async () => undefined,\r\n  deletePost: async () => undefined,\r\n  deleteLatestPost: async () => undefined,\r\n  updateUser: async () => undefined,\r\n  fetchUser: async () => undefined,\r\n});\r\n\r\nexport const useBlog = () => {\r\n  const context = useContext(BlogContext);\r\n  if (!context) {\r\n    throw new Error(\"Parent must be wrapped inside PostsProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport const BlogProvider: FC = ({ children }) => {\r\n  const [user, setUser] = useState<User>();\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [provider, setProvider] = useState<Provider>();\r\n\r\n  const wallet = useAnchorWallet();\r\n  const { connection } = useConnection();\r\n\r\n  const signupUser = useCallback(\r\n    async (data: { name: string; avatar: string }) => {\r\n      if (provider) {\r\n        const { name, avatar } = data;\r\n        const program = getProgram(provider);\r\n        const userAccount = getUserKey(provider.wallet.publicKey);\r\n\r\n        try {\r\n          const tx = await program.rpc.signupUser(name, avatar, {\r\n            accounts: {\r\n              authority: provider.wallet.publicKey,\r\n              userAccount: userAccount.publicKey,\r\n              systemProgram: SystemProgram.programId,\r\n            },\r\n            signers: [userAccount],\r\n          });\r\n\r\n          return tx;\r\n        } catch {}\r\n      }\r\n    },\r\n    [provider]\r\n  );\r\n\r\n  const fetchUser = useCallback(async () => {\r\n    if (provider) {\r\n      const program = getProgram(provider);\r\n      const user = await getUser(program, provider.wallet.publicKey);\r\n\r\n      if (!user) {\r\n        const name = getRandomName();\r\n        const avatar = getAvatarUrl(name);\r\n        await signupUser({ name, avatar });\r\n        const user = await getUser(program, provider.wallet.publicKey);\r\n\r\n        setUser(user);\r\n      } else {\r\n        setUser(user);\r\n      }\r\n    }\r\n  }, [provider, signupUser]);\r\n\r\n  const updateUser = useCallback(\r\n    async (name: string) => {\r\n      const avatar = getAvatarUrl(name);\r\n      if (provider) {\r\n        const program = getProgram(provider);\r\n        const userAccount = getUserKey(provider.wallet.publicKey);\r\n\r\n        try {\r\n          const tx = await program.rpc.updateUser(name, avatar, {\r\n            accounts: {\r\n              authority: provider.wallet.publicKey,\r\n              userAccount: userAccount.publicKey,\r\n              systemProgram: SystemProgram.programId,\r\n            },\r\n          });\r\n\r\n          await fetchUser();\r\n          return tx;\r\n        } catch {}\r\n      }\r\n    },\r\n    [fetchUser, provider]\r\n  );\r\n\r\n  const createPost = useCallback(\r\n    async (data: PostData) => {\r\n      if (!!provider && !!user) {\r\n        const { title, content = \"\" } = data;\r\n        const program = getProgram(provider);\r\n        const postAccount = Keypair.generate();\r\n\r\n        const tx = await program.rpc.createPost(title, content, {\r\n          accounts: {\r\n            blogAccount: BLOG_KEY,\r\n            authority: provider.wallet.publicKey,\r\n            userAccount: new PublicKey(user.id),\r\n            postAccount: postAccount.publicKey,\r\n            systemProgram: SystemProgram.programId,\r\n          },\r\n          signers: [postAccount],\r\n        });\r\n\r\n        return tx;\r\n      }\r\n    },\r\n    [provider, user]\r\n  );\r\n\r\n  const updatePost = useCallback(\r\n    async (oldPost: Post, data: PostData) => {\r\n      if (provider) {\r\n        const { title, content } = data;\r\n        const program = getProgram(provider);\r\n\r\n        const tx = await program.rpc.updatePost(title, content, {\r\n          accounts: {\r\n            authority: provider.wallet.publicKey,\r\n            postAccount: new PublicKey(oldPost.id),\r\n          },\r\n        });\r\n\r\n        const updatedPost = await getPostById(oldPost.id, program);\r\n        if (updatedPost) {\r\n          setPosts((posts) =>\r\n            posts.map((D) => {\r\n              if (D.id === oldPost.id) {\r\n                return updatedPost;\r\n              }\r\n\r\n              return D;\r\n            })\r\n          );\r\n        }\r\n\r\n        return tx;\r\n      }\r\n    },\r\n    [provider]\r\n  );\r\n\r\n  const deletePost = useCallback(\r\n    async (postId: string, nextPostId: string) => {\r\n      if (!!provider) {\r\n        const program = getProgram(provider);\r\n\r\n        const tx = await program.rpc.deletePost({\r\n          accounts: {\r\n            authority: provider.wallet.publicKey,\r\n            postAccount: new PublicKey(postId),\r\n            nextPostAccount: new PublicKey(nextPostId),\r\n          },\r\n        });\r\n\r\n        return tx;\r\n      }\r\n    },\r\n    [provider]\r\n  );\r\n\r\n  const deleteLatestPost = useCallback(\r\n    async (postId: string) => {\r\n      if (!!provider) {\r\n        const program = getProgram(provider);\r\n\r\n        const tx = await program.rpc.deleteLatestPost({\r\n          accounts: {\r\n            authority: provider.wallet.publicKey,\r\n            postAccount: new PublicKey(postId),\r\n            blogAccount: BLOG_KEY,\r\n          },\r\n        });\r\n\r\n        return tx;\r\n      }\r\n    },\r\n    [provider]\r\n  );\r\n\r\n  // set provider\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      const provider = new Provider(connection, wallet, {});\r\n      setProvider(provider);\r\n    }\r\n  }, [connection, wallet]);\r\n\r\n  // set initial posts\r\n  useEffect(() => {\r\n    let POST_EVENT_LISTENER: any;\r\n\r\n    async function start() {\r\n      if (provider) {\r\n        const program = getProgram(provider);\r\n        const blog: any = await initBlog(\r\n          program,\r\n          BLOG_KEY,\r\n          provider.wallet.publicKey\r\n        );\r\n\r\n        // initially load all the posts\r\n        const [observer] = getPosts({\r\n          program,\r\n          fromPostId: blog.currentPostKey.toString(),\r\n        });\r\n\r\n        observer.subscribe({\r\n          next(post) {\r\n            setPosts((posts) => [...posts, post]);\r\n          },\r\n          complete() {\r\n            // listen create/update/delete post events,\r\n            // after fetching all posts\r\n\r\n            POST_EVENT_LISTENER = program.addEventListener(\r\n              \"PostEvent\",\r\n              async (event) => {\r\n                const postId = event?.postId?.toString();\r\n                const nextPostId = event?.nextPostId?.toString();\r\n\r\n                if (postId) {\r\n                  switch (event.label) {\r\n                    case \"CREATE\":\r\n                      const post = await getPostById(postId, program);\r\n\r\n                      if (post) {\r\n                        setPosts((posts) => [post, ...posts]);\r\n                      }\r\n                      break;\r\n\r\n                    case \"UPDATE\":\r\n                      const updatedPost = await getPostById(postId, program);\r\n                      if (updatedPost) {\r\n                        setPosts((posts) =>\r\n                          posts.map((D) => {\r\n                            if (D.id === postId) {\r\n                              return updatedPost;\r\n                            }\r\n\r\n                            return D;\r\n                          })\r\n                        );\r\n                      }\r\n                      break;\r\n\r\n                    case \"DELETE\":\r\n                      const nextPost = nextPostId\r\n                        ? await getPostById(nextPostId, program)\r\n                        : null;\r\n\r\n                      setPosts((posts) =>\r\n                        posts\r\n                          .filter(({ id }) => id !== postId)\r\n                          .map((post) => {\r\n                            if (post.id === nextPostId && nextPost) {\r\n                              return nextPost;\r\n                            }\r\n\r\n                            return post;\r\n                          })\r\n                      );\r\n                      break;\r\n\r\n                    default:\r\n                      break;\r\n                  }\r\n                }\r\n              }\r\n            );\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    start();\r\n\r\n    return () => {\r\n      if (provider && POST_EVENT_LISTENER) {\r\n        const program = getProgram(provider);\r\n\r\n        program.removeEventListener(POST_EVENT_LISTENER).catch((e) => {\r\n          console.log(\"error: \", e.message);\r\n        });\r\n      }\r\n    };\r\n  }, [provider]);\r\n\r\n  return (\r\n    <BlogContext.Provider\r\n      value={{\r\n        user,\r\n        posts,\r\n        createPost,\r\n        updatePost,\r\n        deletePost,\r\n        fetchUser,\r\n        updateUser,\r\n        deleteLatestPost,\r\n      }}\r\n    >\r\n      {children}\r\n    </BlogContext.Provider>\r\n  );\r\n};\r\n","import nameGenerator from \"@afuggini/namegenerator\";\r\n\r\nexport const getRandomName = () => {\r\n  return nameGenerator(\" \");\r\n};\r\n","import { FC, MouseEvent, ReactElement } from \"react\";\r\n\r\ninterface ButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  leftIcon?: ReactElement;\r\n  onClick?: (e: MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n  children,\r\n  loading = true,\r\n  \r\n  className = \"\",\r\n  \r\n}) => {\r\n \r\n\r\n  return (\r\n    <button\r\n      disabled={loading}\r\n      className={`rounded-lg flex justify-center items-center py-2 px-4 border border-transparent text-sm font-medium text-white bg-gradient-to-r from-indigo-400  to-green-500 focus:outline-none shadow-md \r\n\t\t\t${className} ${\r\n        loading ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n          ? \"opacity-60 cursor-not-allowed\"\r\n          : \"transform hover:-translate-y-px focus:shadow-sm focus:-translate-y-0\"\r\n      }\r\n\t\t\t`}\r\n     \r\n    >\r\n      { !loading }\r\n      {!loading && (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-5 w-5 mr-1\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\r\n          />\r\n        </svg>\r\n      )}\r\n      {loading && (\r\n        <svg\r\n          className=\"animate-spin h-5 w-5 text-white mr-1\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"\r\n          />\r\n        </svg>\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import { Popover, Transition } from \"@headlessui/react\";\r\nimport { omit } from \"lodash-es\";\r\nimport { FC, useRef, useState } from \"react\";\r\nimport { usePopper } from \"react-popper\";\r\nimport { Button } from \"src/components/Button\";\r\nimport { useBlog } from \"src/context/Blog\";\r\n\r\ninterface EditProfileProps {\r\n  name: string;\r\n}\r\n\r\nexport const EditProfile: FC<EditProfileProps> = ({ name: oldName }) => {\r\n  const referenceElementRef = useRef<any>();\r\n  const popperElementRef = useRef<any>();\r\n  const { styles, attributes } = usePopper(\r\n    referenceElementRef.current,\r\n    popperElementRef.current\r\n  );\r\n\r\n  const { updateUser } = useBlog();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(oldName);\r\n\r\n  const onUpdateProfile = async () => {\r\n    setLoading(true);\r\n    await updateUser(name);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Popover className=\"relative\">\r\n      {({ open }) => {\r\n        return (\r\n          <>\r\n            <Popover.Button ref={referenceElementRef}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6 text-gray-600\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"\r\n                />\r\n              </svg>\r\n            </Popover.Button>\r\n\r\n            <Transition\r\n              show={open}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 translate-y-4\"\r\n              enterTo=\"opacity-100 translate-y-8\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-4\"\r\n            >\r\n              <Popover.Panel\r\n                ref={popperElementRef}\r\n                style={{\r\n                  ...omit(styles.popper, [\"transform\", \"left\", \"top\"]),\r\n                  right: 0,\r\n                }}\r\n                {...attributes.popper}\r\n                className=\"absolute bottom-8 z-20 transform transition-all\"\r\n              >\r\n                <div className=\"glass rounded-xl shadow-xl py-4 px-6 flex flex-col\">\r\n                  <input\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Your lovely name\"\r\n                    className=\"bg-white rounded-3xl h-10 px-4\"\r\n                  />\r\n                  <Button\r\n                    loading={loading}\r\n                    onClick={onUpdateProfile}\r\n                    className=\"w-full mt-3\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </>\r\n        );\r\n      }}\r\n    </Popover>\r\n  );\r\n};\r\n","export const InterestingSkeleton = () => {\r\n  return (\r\n    <div className=\"card glass relative overflow-hidden flex shadow rounded-lg h-36 bg-white p-4 mt-4\">\r\n      <div className=\"rounded-lg h-full w-32 bg-white\"></div>\r\n      <div className=\"flex-1 ml-3\">\r\n        <div className=\"w-3/4 bg-white rounded-xl h-3 mt-1\"></div>\r\n        <div className=\"w-2/4 bg-white rounded-xl h-3 mt-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, ReactNode, useState } from \"react\";\r\nimport { Button } from \"src/components/Button\";\r\nimport { useBlog } from \"src/context/Blog\";\r\n\r\ninterface PostFormProps {\r\n  postTitle: string;\r\n  postContent: string;\r\n  buttonText?: string;\r\n  formHeader?: ReactNode;\r\n  setPostTitle(title: string): void;\r\n  setPostContent(content: string): void;\r\n  onSubmit(): Promise<void>;\r\n}\r\n\r\nexport const PostForm: FC<PostFormProps> = (props) => {\r\n  const { user } = useBlog();\r\n  const {\r\n    onSubmit,\r\n    postTitle,\r\n    postContent,\r\n    setPostContent,\r\n    setPostTitle,\r\n    formHeader,\r\n    buttonText = \"Post\",\r\n  } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"glass rounded-lg py-4 px-6 bg-white flex flex-col shadow\">\r\n      {formHeader}\r\n      <input\r\n        value={postTitle}\r\n        onChange={(e) => setPostTitle(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Post title\"\r\n        className=\"bg-white rounded-3xl h-10 px-4\"\r\n      />\r\n      <textarea\r\n        value={postContent}\r\n        onChange={(e) => setPostContent(e.target.value)}\r\n        name=\"content\"\r\n        id=\"content-area\"\r\n        rows={3}\r\n        placeholder=\"Describe your post...\"\r\n        className=\"bg-white rounded-xl px-4 py-2 mt-3\"\r\n      ></textarea>\r\n      <Button\r\n        className=\"mt-3\"\r\n        disabled={!user}\r\n        loading={loading}\r\n        onClick={async () => {\r\n          setLoading(true);\r\n          await onSubmit();\r\n          setLoading(false);\r\n        }}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { FC, Fragment, useState } from \"react\";\r\nimport { PostForm } from \"src/components/PostForm\";\r\nimport { Post, useBlog } from \"src/context/Blog\";\r\n\r\ninterface EditPostProps {\r\n  post: Post;\r\n  open: boolean;\r\n  setOpen(open: boolean): void;\r\n}\r\n\r\nexport const EditPost: FC<EditPostProps> = (props) => {\r\n  const { open, setOpen, post } = props;\r\n  const { title, content } = post;\r\n  const [postTitle, setPostTitle] = useState(title);\r\n  const [postContent, setPostContent] = useState(content);\r\n\r\n  const { updatePost } = useBlog();\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-transparent rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <PostForm\r\n                postTitle={postTitle}\r\n                postContent={postContent}\r\n                setPostTitle={setPostTitle}\r\n                setPostContent={setPostContent}\r\n                onSubmit={async () => {\r\n                  await updatePost(post, {\r\n                    title: postTitle,\r\n                    content: postContent,\r\n                  });\r\n                  setOpen(false);\r\n                }}\r\n                buttonText=\"Update\"\r\n                formHeader={\r\n                  <div className=\"flex justify-end mb-3\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-5 w-5 cursor-pointer text-gray-600  transition duration-100 ease-in-out transform hover:scale-110\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      onClick={() => setOpen(false)}\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M6 18L18 6M6 6l12 12\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                }\r\n              />\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n};\r\n","import { PublicKey } from \"@solana/web3.js\";\r\n\r\nexport const displayKey = (pubKey: PublicKey) => {\r\n  const key = pubKey.toString();\r\n\r\n  return key.length > 20\r\n    ? `${key.substring(0, 4)}...${key.substring(key.length - 4, key.length)}`\r\n    : key;\r\n};\r\n","import { PublicKey } from \"@solana/web3.js\";\r\nimport { FC, useState } from \"react\";\r\nimport { EditPost } from \"src/components/EditPost\";\r\nimport { useBlog } from \"src/context/Blog\";\r\nimport { displayKey } from \"src/functions/displayKey\";\r\n\r\ninterface PostCardProps {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  user: string;\r\n  date: string;\r\n  prePostId: string | null;\r\n  nextPostId: string | undefined;\r\n}\r\n\r\nexport const PostCard: FC<PostCardProps> = (props) => {\r\n  const { id, title, content, user, date, nextPostId, prePostId } = props;\r\n  const { user: currentUser, deletePost, deleteLatestPost } = useBlog();\r\n\r\n  const [loadingDelete, setLoadingDelete] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  return (\r\n    <div className=\"glass rounded-lg py-4 px-6 bg-white shadow flex flex-col mt-4\">\r\n      <h3 className=\"font-bold text-lg text-gray-600\">{title}</h3>\r\n      <p className=\"my-2\">{content}</p>\r\n      <div className=\"flex justify-between items-end\">\r\n        <div className=\"flex items-center mt-2\">\r\n          <img\r\n            src=\"https://gravatar.com/avatar/0c3178b383820ae4f3f5b230717c4082?s=400&d=robohash&r=x\"\r\n            alt=\"avatar\"\r\n            className=\"w-10 h-10 rounded-full bg-gray-200 shadow ring-2 ring-indigo-400 ring-offset-2 ring-opacity-50\"\r\n          />\r\n          <div className=\"mx-3\">\r\n            <h3 className=\"font-bold text-gray-600 capitalize\">\r\n              @{displayKey(new PublicKey(user))}\r\n            </h3>\r\n            <p className=\"text-xs\">{date}</p>\r\n          </div>\r\n        </div>\r\n        {user === currentUser?.id && (\r\n          <div className=\"flex items-center\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5 mr-2 text-green-500 transition duration-100 ease-in-out transform hover:scale-110 cursor-pointer\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              onClick={() => setOpenEdit(true)}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n              />\r\n            </svg>\r\n            <EditPost\r\n              post={{\r\n                title,\r\n                content,\r\n                id,\r\n                userId: user,\r\n                prePostId,\r\n              }}\r\n              open={openEdit}\r\n              setOpen={(o) => setOpenEdit(o)}\r\n            />\r\n\r\n            <button\r\n              disabled={loadingDelete}\r\n              className={\r\n                loadingDelete ? \"cursor-not-allowed\" : \"cursor-pointer\"\r\n              }\r\n              onClick={async () => {\r\n                setLoadingDelete(true);\r\n                if (nextPostId) {\r\n                  await deletePost(id, nextPostId);\r\n                } else {\r\n                  await deleteLatestPost(id);\r\n                }\r\n                setLoadingDelete(false);\r\n              }}\r\n            >\r\n              {loadingDelete ? (\r\n                <svg\r\n                  className=\"animate-spin h-5 w-5 text-red-500\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5 text-red-500 transition duration-100 ease-in-out transform hover:scale-110 cursor-pointer\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const SponsoredSkeleton = () => {\r\n  return (\r\n    <div className=\"card glass relative overflow-hidden flex flex-col shadow rounded-lg bg-white p-4 mt-4\">\r\n      <div className=\"rounded-lg h-32 bg-white\"></div>\r\n      <div className=\"flex-1 mt-4\">\r\n        <div className=\"w-3/4 bg-white rounded-xl h-3 mt-1\"></div>\r\n        <div className=\"w-2/4 bg-white rounded-xl h-3 mt-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletName } from \"@solana/wallet-adapter-wallets\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Button } from \"src/components/Button\";\r\nimport { EditProfile } from \"src/components/EditProfile\";\r\nimport { InterestingSkeleton } from \"src/components/InterestingSkeleton\";\r\nimport { PostCard } from \"src/components/PostCard\";\r\nimport { PostForm } from \"src/components/PostForm\";\r\nimport { SponsoredSkeleton } from \"src/components/SponsoredSkeleton\";\r\nimport { useBlog } from \"src/context/Blog\";\r\nimport { displayKey } from \"src/functions/displayKey\";\r\n\r\nexport const Dashboard = () => {\r\n  const [connecting, setConnecting] = useState(false);\r\n  const { connected, select, publicKey } = useWallet();\r\n  const { user, posts, fetchUser, createPost } = useBlog();\r\n\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const [postimg, setPostimg] = useState<File>();\r\n\r\n  const onConnect = () => {\r\n    setConnecting(true);\r\n    select(WalletName.Phantom);\r\n  };\r\n\r\n  const onCreatePost = useCallback(\r\n    async (title: string, content: string) => {\r\n      try {\r\n        await createPost({ title, content });\r\n        setPostTitle(\"\");\r\n        setPostContent(\"\");\r\n        \r\n      } catch {\r\n        // show toast message\r\n      }\r\n    },\r\n    [createPost]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (publicKey) {\r\n      fetchUser();\r\n    }\r\n  }, [fetchUser, publicKey]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setConnecting(false);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"dashboard background-color overflow-auto h-screen\">\r\n      <header className=\"fixed z-10 w-full h-14 glass shadow-md\">\r\n        <div className=\"flex justify-between items-center h-full container\">\r\n          <h2 className=\"text-2xl font-bold\">\r\n            👻{\" \"}\r\n            <span className=\"text-transparent bg-clip-text bg-gradient-to-br from-indigo-300  to-green-600\">\r\n              BloG\r\n            </span>\r\n          </h2>\r\n          {connected ? (\r\n            <div className=\"flex items-center\">\r\n              <img\r\n                src={user?.avatar}\r\n                alt=\"avatar\"\r\n                className=\"w-8 h-8 rounded-full bg-gray-200 shadow ring-2 ring-indigo-400 ring-offset-2 ring-opacity-50\"\r\n              />\r\n              <p className=\"text-gray-600 font-bold text-sm ml-2 capitalize\">\r\n                {user?.name}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <Button\r\n              loading={connecting}\r\n              className=\"w-28\"\r\n              onClick={onConnect}\r\n              leftIcon={\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5 mr-1\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\r\n                  />\r\n                </svg>\r\n              }\r\n            >\r\n              Connect\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </header>\r\n      <main className=\"dashboard-main pb-4 container flex relative\">\r\n        <aside className=\"flex-3 pt-6\">\r\n          <div className=\"dashboard-aside px-8\">\r\n            <h2 className=\"font-bold text-gray-500\">\r\n              You might find these posts interesting\r\n            </h2>\r\n            <InterestingSkeleton />\r\n            <InterestingSkeleton />\r\n            <hr className=\"h-1 w-full bg-gray-100 rounded-xl mt-4\" />\r\n            <div className=\"flex justify-between items-end mt-auto\">\r\n              <div className=\"flex w-full justify-between items-end\">\r\n                {connected ? (\r\n                  <>\r\n                    <div className=\"flex\">\r\n                      <img\r\n                        src={user?.avatar}\r\n                        alt=\"avatar\"\r\n                        className=\"w-12 h-12 rounded-full shadow g-gray-200 ring-2 ring-indigo-400 ring-offset-2 ring-opacity-50\"\r\n                      />\r\n                      <div className=\"flex flex-col items-start\">\r\n                        <p className=\"text-gray-700 font-bold text-lg ml-3 capitalize\">\r\n                          {user?.name}\r\n                        </p>\r\n                        <p className=\"text-gray-700 text-sm ml-3\">\r\n                          @{displayKey(publicKey!)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    {!!user && <EditProfile name={user.name} />}\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    loading={connecting}\r\n                    className=\"w-full\"\r\n                    onClick={onConnect}\r\n                  >\r\n                    Connect to Wallet\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </aside>\r\n        <aside className=\"flex-5 pt-6\">\r\n          <div className=\"px-8\">\r\n            <PostForm\r\n              \r\n              postTitle={postTitle}\r\n              postContent={postContent}\r\n              setPostTitle={setPostTitle}\r\n              setPostContent={setPostContent}\r\n              onSubmit={() => onCreatePost(postTitle, postContent)}\r\n            />\r\n            {posts.map(({ title, content, userId, id, prePostId }, i) => {\r\n              return (\r\n                <PostCard\r\n                  key={id}\r\n                  id={id}\r\n                  \r\n                  title={title}\r\n                  content={content}\r\n                  user={userId}\r\n                  prePostId={prePostId}\r\n                  nextPostId={posts[i - 1]?.id}\r\n                  date=\"Dec 2, 2021\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </aside>\r\n        <aside className=\"flex-3 pt-6\">\r\n          <div className=\"px-8 dashboard-aside\">\r\n            <h2 className=\"font-bold text-gray-500\">Sponsored</h2>\r\n            <SponsoredSkeleton />\r\n            <SponsoredSkeleton />\r\n            <div className=\"flex justify-end mt-auto\">\r\n              <p className=\"text-sm\">© 2021 BloG, Inc.</p>\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Dashboard } from \"src/pages/dashboard\";\r\n\r\nexport const Router: FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Dashboard />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport { getPhantomWallet } from \"@solana/wallet-adapter-wallets\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { FC } from \"react\";\r\nimport { BlogProvider } from \"src/context/Blog\";\r\nimport { Router } from \"src/router\";\r\n\r\nconst wallets = [getPhantomWallet()];\r\nconst endPoint = clusterApiUrl(\"devnet\");\r\n// const localnetEndpoint = \"http://localhost:8899\"\r\n\r\nexport const App: FC = () => {\r\n  return (\r\n    <ConnectionProvider endpoint={endPoint}>\r\n      <WalletProvider wallets={wallets} autoConnect>\r\n        <BlogProvider>\r\n          <Router />\r\n        </BlogProvider>\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n};\r\n","import ReactDOM from \"react-dom\";\r\nimport { App } from \"src/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}